// Generated by jextract

package com.sunya.netchdf.mfhdfClib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$133 {

    static final FunctionDescriptor VSgetattr$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VSgetattr$MH = RuntimeHelper.downcallHandle(
        "VSgetattr",
        constants$133.VSgetattr$FUNC
    );
    static final FunctionDescriptor VSisattr$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle VSisattr$MH = RuntimeHelper.downcallHandle(
        "VSisattr",
        constants$133.VSisattr$FUNC
    );
    static final FunctionDescriptor vicheckcompat$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle vicheckcompat$MH = RuntimeHelper.downcallHandle(
        "vicheckcompat",
        constants$133.vicheckcompat$FUNC
    );
    static final FunctionDescriptor vimakecompat$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle vimakecompat$MH = RuntimeHelper.downcallHandle(
        "vimakecompat",
        constants$133.vimakecompat$FUNC
    );
    static final FunctionDescriptor vcheckcompat$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle vcheckcompat$MH = RuntimeHelper.downcallHandle(
        "vcheckcompat",
        constants$133.vcheckcompat$FUNC
    );
    static final FunctionDescriptor vmakecompat$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle vmakecompat$MH = RuntimeHelper.downcallHandle(
        "vmakecompat",
        constants$133.vmakecompat$FUNC
    );
}


