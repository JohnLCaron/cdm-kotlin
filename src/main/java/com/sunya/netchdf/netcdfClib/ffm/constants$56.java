// Generated by jextract

package com.sunya.netchdf.netcdfClib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

class constants$56 {

    static final FunctionDescriptor ncvarrename$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ncvarrename$MH = RuntimeHelper.downcallHandle(
        "ncvarrename",
        constants$56.ncvarrename$FUNC
    );
    static final FunctionDescriptor ncrecinq$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ncrecinq$MH = RuntimeHelper.downcallHandle(
        "ncrecinq",
        constants$56.ncrecinq$FUNC
    );
    static final FunctionDescriptor ncrecget$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ncrecget$MH = RuntimeHelper.downcallHandle(
        "ncrecget",
        constants$56.ncrecget$FUNC
    );
    static final FunctionDescriptor ncrecput$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ncrecput$MH = RuntimeHelper.downcallHandle(
        "ncrecput",
        constants$56.ncrecput$FUNC
    );
    static final FunctionDescriptor nc_initialize$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle nc_initialize$MH = RuntimeHelper.downcallHandle(
        "nc_initialize",
        constants$56.nc_initialize$FUNC
    );
    static final FunctionDescriptor nc_finalize$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle nc_finalize$MH = RuntimeHelper.downcallHandle(
        "nc_finalize",
        constants$56.nc_finalize$FUNC
    );
}


