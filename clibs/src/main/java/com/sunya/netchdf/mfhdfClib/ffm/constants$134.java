// Generated by jextract

package com.sunya.netchdf.mfhdfClib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

class constants$134 {

    static final FunctionDescriptor VSelts$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle VSelts$MH = RuntimeHelper.downcallHandle(
        "VSelts",
        constants$134.VSelts$FUNC
    );
    static final FunctionDescriptor VSgetinterlace$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle VSgetinterlace$MH = RuntimeHelper.downcallHandle(
        "VSgetinterlace",
        constants$134.VSgetinterlace$FUNC
    );
    static final FunctionDescriptor VSsetinterlace$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle VSsetinterlace$MH = RuntimeHelper.downcallHandle(
        "VSsetinterlace",
        constants$134.VSsetinterlace$FUNC
    );
    static final FunctionDescriptor VSgetfields$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VSgetfields$MH = RuntimeHelper.downcallHandle(
        "VSgetfields",
        constants$134.VSgetfields$FUNC
    );
    static final FunctionDescriptor VSfexist$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VSfexist$MH = RuntimeHelper.downcallHandle(
        "VSfexist",
        constants$134.VSfexist$FUNC
    );
    static final FunctionDescriptor VSsizeof$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VSsizeof$MH = RuntimeHelper.downcallHandle(
        "VSsizeof",
        constants$134.VSsizeof$FUNC
    );
}


