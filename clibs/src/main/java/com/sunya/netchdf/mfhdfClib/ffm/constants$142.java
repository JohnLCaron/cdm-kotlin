// Generated by jextract

package com.sunya.netchdf.mfhdfClib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

class constants$142 {

    static final FunctionDescriptor Vsetname$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle Vsetname$MH = RuntimeHelper.downcallHandle(
        "Vsetname",
        constants$142.Vsetname$FUNC
    );
    static final FunctionDescriptor Vsetclass$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle Vsetclass$MH = RuntimeHelper.downcallHandle(
        "Vsetclass",
        constants$142.Vsetclass$FUNC
    );
    static final FunctionDescriptor Visvg$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle Visvg$MH = RuntimeHelper.downcallHandle(
        "Visvg",
        constants$142.Visvg$FUNC
    );
    static final FunctionDescriptor Visvs$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle Visvs$MH = RuntimeHelper.downcallHandle(
        "Visvs",
        constants$142.Visvs$FUNC
    );
    static final FunctionDescriptor Vgetid$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle Vgetid$MH = RuntimeHelper.downcallHandle(
        "Vgetid",
        constants$142.Vgetid$FUNC
    );
    static final FunctionDescriptor Vgetnext$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle Vgetnext$MH = RuntimeHelper.downcallHandle(
        "Vgetnext",
        constants$142.Vgetnext$FUNC
    );
}


