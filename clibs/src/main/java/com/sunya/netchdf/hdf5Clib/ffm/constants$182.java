// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$182 {

    static final FunctionDescriptor H5Pset_fapl_splitter$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle H5Pset_fapl_splitter$MH = RuntimeHelper.downcallHandle(
        "H5Pset_fapl_splitter",
        constants$182.H5Pset_fapl_splitter$FUNC
    );
    static final FunctionDescriptor H5Pget_fapl_splitter$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle H5Pget_fapl_splitter$MH = RuntimeHelper.downcallHandle(
        "H5Pget_fapl_splitter",
        constants$182.H5Pget_fapl_splitter$FUNC
    );
    static final FunctionDescriptor H5FD_stdio_init$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle H5FD_stdio_init$MH = RuntimeHelper.downcallHandle(
        "H5FD_stdio_init",
        constants$182.H5FD_stdio_init$FUNC
    );
    static final FunctionDescriptor H5Pset_fapl_stdio$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle H5Pset_fapl_stdio$MH = RuntimeHelper.downcallHandle(
        "H5Pset_fapl_stdio",
        constants$182.H5Pset_fapl_stdio$FUNC
    );
    static final MemorySegment H5_DEFAULT_PLUGINDIR$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("/usr/lib/x86_64-linux-gnu/hdf5/serial/plugins");
    static final MemorySegment H5_EXAMPLESDIR$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("${prefix}/share/hdf5_examples");
}


