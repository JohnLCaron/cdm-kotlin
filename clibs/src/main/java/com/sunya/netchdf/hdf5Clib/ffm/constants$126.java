// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$126 {

    static final FunctionDescriptor H5Z_set_local_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle H5Z_set_local_func_t$MH = RuntimeHelper.downcallHandle(
        constants$126.H5Z_set_local_func_t$FUNC
    );
    static final FunctionDescriptor H5Z_func_t$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle H5Z_func_t$MH = RuntimeHelper.downcallHandle(
        constants$126.H5Z_func_t$FUNC
    );
    static final FunctionDescriptor H5Zregister$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle H5Zregister$MH = RuntimeHelper.downcallHandle(
        "H5Zregister",
        constants$126.H5Zregister$FUNC
    );
    static final FunctionDescriptor H5Zunregister$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle H5Zunregister$MH = RuntimeHelper.downcallHandle(
        "H5Zunregister",
        constants$126.H5Zunregister$FUNC
    );
    static final FunctionDescriptor H5Zfilter_avail$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle H5Zfilter_avail$MH = RuntimeHelper.downcallHandle(
        "H5Zfilter_avail",
        constants$126.H5Zfilter_avail$FUNC
    );
}


