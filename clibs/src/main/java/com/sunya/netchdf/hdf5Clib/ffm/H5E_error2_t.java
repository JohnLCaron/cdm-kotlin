// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class H5E_error2_t {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("cls_id"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("maj_num"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("min_num"),
        Constants$root.C_INT$LAYOUT.withName("line"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("func_name"),
        Constants$root.C_POINTER$LAYOUT.withName("file_name"),
        Constants$root.C_POINTER$LAYOUT.withName("desc")
    ).withName("H5E_error2_t");
    public static MemoryLayout $LAYOUT() {
        return H5E_error2_t.$struct$LAYOUT;
    }
    static final VarHandle cls_id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cls_id"));
    public static VarHandle cls_id$VH() {
        return H5E_error2_t.cls_id$VH;
    }
    public static long cls_id$get(MemorySegment seg) {
        return (long)H5E_error2_t.cls_id$VH.get(seg);
    }
    public static void cls_id$set( MemorySegment seg, long x) {
        H5E_error2_t.cls_id$VH.set(seg, x);
    }
    public static long cls_id$get(MemorySegment seg, long index) {
        return (long)H5E_error2_t.cls_id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cls_id$set(MemorySegment seg, long index, long x) {
        H5E_error2_t.cls_id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle maj_num$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("maj_num"));
    public static VarHandle maj_num$VH() {
        return H5E_error2_t.maj_num$VH;
    }
    public static long maj_num$get(MemorySegment seg) {
        return (long)H5E_error2_t.maj_num$VH.get(seg);
    }
    public static void maj_num$set( MemorySegment seg, long x) {
        H5E_error2_t.maj_num$VH.set(seg, x);
    }
    public static long maj_num$get(MemorySegment seg, long index) {
        return (long)H5E_error2_t.maj_num$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void maj_num$set(MemorySegment seg, long index, long x) {
        H5E_error2_t.maj_num$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle min_num$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("min_num"));
    public static VarHandle min_num$VH() {
        return H5E_error2_t.min_num$VH;
    }
    public static long min_num$get(MemorySegment seg) {
        return (long)H5E_error2_t.min_num$VH.get(seg);
    }
    public static void min_num$set( MemorySegment seg, long x) {
        H5E_error2_t.min_num$VH.set(seg, x);
    }
    public static long min_num$get(MemorySegment seg, long index) {
        return (long)H5E_error2_t.min_num$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void min_num$set(MemorySegment seg, long index, long x) {
        H5E_error2_t.min_num$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle line$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("line"));
    public static VarHandle line$VH() {
        return H5E_error2_t.line$VH;
    }
    public static int line$get(MemorySegment seg) {
        return (int)H5E_error2_t.line$VH.get(seg);
    }
    public static void line$set( MemorySegment seg, int x) {
        H5E_error2_t.line$VH.set(seg, x);
    }
    public static int line$get(MemorySegment seg, long index) {
        return (int)H5E_error2_t.line$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void line$set(MemorySegment seg, long index, int x) {
        H5E_error2_t.line$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle func_name$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("func_name"));
    public static VarHandle func_name$VH() {
        return H5E_error2_t.func_name$VH;
    }
    public static MemoryAddress func_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)H5E_error2_t.func_name$VH.get(seg);
    }
    public static void func_name$set( MemorySegment seg, MemoryAddress x) {
        H5E_error2_t.func_name$VH.set(seg, x);
    }
    public static MemoryAddress func_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)H5E_error2_t.func_name$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void func_name$set(MemorySegment seg, long index, MemoryAddress x) {
        H5E_error2_t.func_name$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle file_name$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("file_name"));
    public static VarHandle file_name$VH() {
        return H5E_error2_t.file_name$VH;
    }
    public static MemoryAddress file_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)H5E_error2_t.file_name$VH.get(seg);
    }
    public static void file_name$set( MemorySegment seg, MemoryAddress x) {
        H5E_error2_t.file_name$VH.set(seg, x);
    }
    public static MemoryAddress file_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)H5E_error2_t.file_name$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void file_name$set(MemorySegment seg, long index, MemoryAddress x) {
        H5E_error2_t.file_name$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle desc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("desc"));
    public static VarHandle desc$VH() {
        return H5E_error2_t.desc$VH;
    }
    public static MemoryAddress desc$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)H5E_error2_t.desc$VH.get(seg);
    }
    public static void desc$set( MemorySegment seg, MemoryAddress x) {
        H5E_error2_t.desc$VH.set(seg, x);
    }
    public static MemoryAddress desc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)H5E_error2_t.desc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void desc$set(MemorySegment seg, long index, MemoryAddress x) {
        H5E_error2_t.desc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


