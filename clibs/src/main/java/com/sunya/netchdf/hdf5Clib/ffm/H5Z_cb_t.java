// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class H5Z_cb_t {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("func"),
        Constants$root.C_POINTER$LAYOUT.withName("op_data")
    ).withName("H5Z_cb_t");
    public static MemoryLayout $LAYOUT() {
        return H5Z_cb_t.$struct$LAYOUT;
    }
    static final VarHandle func$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("func"));
    public static VarHandle func$VH() {
        return H5Z_cb_t.func$VH;
    }
    public static MemoryAddress func$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)H5Z_cb_t.func$VH.get(seg);
    }
    public static void func$set( MemorySegment seg, MemoryAddress x) {
        H5Z_cb_t.func$VH.set(seg, x);
    }
    public static MemoryAddress func$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)H5Z_cb_t.func$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void func$set(MemorySegment seg, long index, MemoryAddress x) {
        H5Z_cb_t.func$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static H5Z_filter_func_t func (MemorySegment segment, MemorySession session) {
        return H5Z_filter_func_t.ofAddress(func$get(segment), session);
    }
    static final VarHandle op_data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("op_data"));
    public static VarHandle op_data$VH() {
        return H5Z_cb_t.op_data$VH;
    }
    public static MemoryAddress op_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)H5Z_cb_t.op_data$VH.get(seg);
    }
    public static void op_data$set( MemorySegment seg, MemoryAddress x) {
        H5Z_cb_t.op_data$VH.set(seg, x);
    }
    public static MemoryAddress op_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)H5Z_cb_t.op_data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void op_data$set(MemorySegment seg, long index, MemoryAddress x) {
        H5Z_cb_t.op_data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


